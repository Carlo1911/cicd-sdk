version: "3.8"

services:
  web:
    build:
      context: .
      dockerfile: ./Dockerfile
    image: auth-service:lastest
    container_name: auth-service
    command: poetry run uvicorn main:app --host 0.0.0.0 --port 9001 --reload
    restart: always
    depends_on:
      - dynamodb-local
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID-test}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY-test}
      - AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN-test}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION-us-west-2}
    env_file:
      - .env
    volumes:
      - .:/code:z
    ports:
      - "9001:9001"
    networks:
      - project-network

  localstack:
    container_name: "${LOCALSTACK_DOCKER_NAME-localstack_main}"
    image: localstack/localstack
    network_mode: bridge
    ports:
      - "127.0.0.1:4566:4566"
      - "127.0.0.1:4571:4571"
    environment:
      - SERVICES=${SERVICES- }
      - DEBUG=${DEBUG-0}
      - DATA_DIR=${DATA_DIR- }
      - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR-local}
      - HOST_TMP_FOLDER=${TMPDIR:-/tmp/}localstack
      - DOCKER_HOST=unix:///var/run/docker.sock
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION-us-west-2}
      - DEFAULT_REGION=us-west-2
      - HOSTNAME=${HOSTNAME-localstack}
      - HOSTNAME_EXTERNAL=${HOSTNAME_EXTERNAL-localstack}
    volumes:
      - "${TMPDIR:-/tmp}/localstack:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - project-network

  dynamodb-admin:
    image: aaronshaf/dynamodb-admin
    ports:
      - "9002:9002"
    environment:
      - DYNAMO_ENDPOINT=http://${HOSTNAME-localstack}:4566 dynamodb-admin
      - AWS_REGION=${AWS_DEFAULT_REGION-us-west-2}
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - PORT=9002
    depends_on:
      - localstack
    networks:
      - project-network

networks:
  project-network:
    name: auth-service-network
